name: Release Candidate

on:
  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0

jobs:
  persist-binaries:
    name: Publish binaries
    runs-on: ${{ matrix.build.OS }}
    defaults:
      run:  
        shell: bash
        working-directory: "${{ github.workspace }}/native"
    strategy:
      fail-fast: false
      matrix:
        build:
          - NAME: linux-x64-glibc
            OS: ubuntu-20.04
            TOOLCHAIN: stable
            TARGET: x86_64-unknown-linux-gnu
            # EXE: libtypeshift.so

          - NAME: linux-arm64-glibc
            OS: ubuntu-20.04
            TOOLCHAIN: stable
            TARGET: aarch64-unknown-linux-gnu

          - NAME: win32-x64-msvc
            OS: windows-2022
            TOOLCHAIN: stable
            TARGET: x86_64-pc-windows-msvc

          - NAME: win32-arm64-msvc
            OS: windows-2022
            TOOLCHAIN: stable
            TARGET: aarch64-pc-windows-msvc

          - NAME: darwin-x64
            OS: macos-11
            TOOLCHAIN: stable
            TARGET: x86_64-apple-darwin

          - NAME: darwin-arm64
            OS: macos-11
            TOOLCHAIN: stable
            TARGET: aarch64-apple-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: cache-rustup
        name: Cache Rust toolchain
        uses: actions/cache@v3
        with:
          path: ~/.rustup
          key: toolchain-${{ matrix.build.TARGET }}

      - if: ${{ steps.cache-rustup.outputs.cache-hit != 'true' }}
        name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.build.TOOLCHAIN }}
          target: ${{ matrix.build.TARGET }}
          override: true

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --manifest-path ${{ github.workspace }}/native/Cargo.toml --message-format=json-render-diagnostics --target ${{ matrix.build.TARGET }}
