name: Release Candidate

on:
  workflow_dispatch:

jobs:
  publish-binaries:
    name: Publish binaries
    runs-on: ${{ matrix.build.OS }}
    strategy:
      fail-fast: false
      matrix:
        build:
          - NAME: linux-x64-glibc
            OS: ubuntu-20.04
            TOOLCHAIN: stable
            TARGET: x86_64-unknown-linux-gnu
            # EXE: libtypeshift.so

          - NAME: linux-arm64-glibc
            OS: ubuntu-20.04
            TOOLCHAIN: stable
            TARGET: aarch64-unknown-linux-gnu

          # - NAME: win32-x64-msvc
          #   OS: windows-2022
          #   TOOLCHAIN: stable
          #   TARGET: x86_64-pc-windows-msvc

          # - NAME: win32-arm64-msvc
          #   OS: windows-2022
          #   TOOLCHAIN: stable
          #   TARGET: aarch64-pc-windows-msvc

          # - NAME: darwin-x64
          #   OS: macos-11
          #   TOOLCHAIN: stable
          #   TARGET: x86_64-apple-darwin

          # - NAME: darwin-arm64
          #   OS: macos-11
          #   TOOLCHAIN: stable
          #   TARGET: aarch64-apple-darwin
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Add Tools
        shell: bash
        if: ${{ matrix.build.TARGET }} == aarch64-unknown-linux-gnu
        run: |
          rustup target add ${{ matrix.build.TARGET }}

      - name: Build binary
        shell: bash
        working-directory: "${{ github.workspace }}/native"
        run: |
          cargo build --release --message-format=json-render-diagnostics --target ${{ matrix.build.TARGET }}
          ls "${{ github.workspace }}/native/target/${{ matrix.build.TARGET }}/release"
