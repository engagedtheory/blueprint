use deno_ast::swc::ast::*;

#[derive(Debug)]
pub enum NodeKind<'n> {
    ExportSpecifier(&'n ExportSpecifier),
    TsInterfaceBody(&'n TsInterfaceBody),
    TsTypeElement(&'n TsTypeElement),
    ClassProp(&'n ClassProp),
    ClassMember(&'n ClassMember),
    Class(&'n Class),
    TsTypeParamInstantiation(&'n TsTypeParamInstantiation),
    FnDecl(&'n FnDecl),
    TsModuleDecl(&'n TsModuleDecl),
    TsNamespaceExport(&'n TsNamespaceExportDecl),
    TsExportAssignment(&'n TsExportAssignment),
    TsImportEquals(&'n TsImportEqualsDecl),
    ExportAll(&'n ExportAll),
    BlockStmt(&'n BlockStmt),
    EmptyStmt(&'n EmptyStmt),
    Decl(&'n Decl),
    DebuggerStmt(&'n DebuggerStmt),
    WithStmt(&'n WithStmt),
    ReturnStmt(&'n ReturnStmt),
    LabeledStmt(&'n LabeledStmt),
    BreakStmt(&'n BreakStmt),
    ContinueStmt(&'n ContinueStmt),
    IfStmt(&'n IfStmt),
    SwitchStmt(&'n SwitchStmt),
    ThrowStmt(&'n ThrowStmt),
    TryStmt(&'n TryStmt),
    WhileStmt(&'n WhileStmt),
    DoWhileStmt(&'n DoWhileStmt),
    ForStmt(&'n ForStmt),
    ForInStmt(&'n ForInStmt),
    ForOfStmt(&'n ForOfStmt),
    ExprStmt(&'n ExprStmt),
    TsPropertySignature(&'n TsPropertySignature),
    TsKeywordType(&'n TsKeywordType),
    TsThisType(&'n TsThisType),
    TsFnOrConstructorType(&'n TsFnOrConstructorType),
    TsTypeRef(&'n TsTypeRef),
    TsTypeQuery(&'n TsTypeQuery),
    TsTypeLit(&'n TsTypeLit),
    TsArrayType(&'n TsArrayType),
    TsTupleType(&'n TsTupleType),
    TsOptionalType(&'n TsOptionalType),
    TsRestType(&'n TsRestType),
    TsUnionOrIntersectionType(&'n TsUnionOrIntersectionType),
    TsConditionalType(&'n TsConditionalType),
    TsInferType(&'n TsInferType),
    TsParenthesizedType(&'n TsParenthesizedType),
    TsTypeOperator(&'n TsTypeOperator),
    TsIndexedAccessType(&'n TsIndexedAccessType),
    TsMappedType(&'n TsMappedType),
    TsLitType(&'n TsLitType),
    TsTypePredicate(&'n TsTypePredicate),
    TsImportType(&'n TsImportType),
    TsType(&'n TsType),
    TsTypeAnnotation(&'n TsTypeAnn),
    ObjectLit(&'n ObjectLit),
    BlockStmtOrExpr(&'n BlockStmtOrExpr),
    Pat(&'n Pat),
    ArrowExpr(&'n ArrowExpr),
    ExprOrSpread(&'n ExprOrSpread),
    Callee(&'n Callee),
    CallExpr(&'n CallExpr),
    Ident(&'n Ident),
    Expr(&'n Expr),
    VarDecl(&'n VarDecl),
    NamedExport(&'n NamedExport),
    ImportNamedSpecifier(&'n ImportNamedSpecifier),
    ClassDecl(&'n ClassDecl),
    ClassExpr(&'n ClassExpr),
    ExportDecl(&'n ExportDecl),
    ExportDefaultDecl(&'n ExportDefaultDecl),
    ExportDefaultExpr(&'n ExportDefaultExpr),
    ImportDecl(&'n ImportDecl),
    ImportDefaultSpecifier(&'n ImportDefaultSpecifier),
    Module(&'n Module),
    ModuleItem(&'n ModuleItem),
    TsEnumDecl(&'n TsEnumDecl),
    TsInterfaceDecl(&'n TsInterfaceDecl),
    TsTypeAliasDecl(&'n TsTypeAliasDecl),
    ImportSpecifier(&'n ImportSpecifier),
    VarDeclarator(&'n VarDeclarator),
}

impl<'n> Clone for NodeKind<'n> {
    fn clone(&self) -> NodeKind<'n> {
        match self {
            NodeKind::TsNamespaceExport(raw) => NodeKind::TsNamespaceExport(*raw),
            NodeKind::TsExportAssignment(raw) => NodeKind::TsExportAssignment(*raw),
            NodeKind::TsImportEquals(raw) => NodeKind::TsImportEquals(*raw),
            NodeKind::ExportAll(raw) => NodeKind::ExportAll(*raw),
            NodeKind::BlockStmt(raw) => NodeKind::BlockStmt(*raw),
            NodeKind::EmptyStmt(raw) => NodeKind::EmptyStmt(*raw),
            NodeKind::Decl(raw) => NodeKind::Decl(*raw),
            NodeKind::DebuggerStmt(raw) => NodeKind::DebuggerStmt(*raw),
            NodeKind::WithStmt(raw) => NodeKind::WithStmt(*raw),
            NodeKind::ReturnStmt(raw) => NodeKind::ReturnStmt(*raw),
            NodeKind::LabeledStmt(raw) => NodeKind::LabeledStmt(*raw),
            NodeKind::BreakStmt(raw) => NodeKind::BreakStmt(*raw),
            NodeKind::ContinueStmt(raw) => NodeKind::ContinueStmt(*raw),
            NodeKind::IfStmt(raw) => NodeKind::IfStmt(*raw),
            NodeKind::SwitchStmt(raw) => NodeKind::SwitchStmt(*raw),
            NodeKind::ThrowStmt(raw) => NodeKind::ThrowStmt(*raw),
            NodeKind::TryStmt(raw) => NodeKind::TryStmt(*raw),
            NodeKind::WhileStmt(raw) => NodeKind::WhileStmt(*raw),
            NodeKind::DoWhileStmt(raw) => NodeKind::DoWhileStmt(*raw),
            NodeKind::ForStmt(raw) => NodeKind::ForStmt(*raw),
            NodeKind::ForInStmt(raw) => NodeKind::ForInStmt(*raw),
            NodeKind::ForOfStmt(raw) => NodeKind::ForOfStmt(*raw),
            NodeKind::ExprStmt(raw) => NodeKind::ExprStmt(*raw),
            NodeKind::TsPropertySignature(raw) => NodeKind::TsPropertySignature(*raw),
            NodeKind::TsKeywordType(raw) => NodeKind::TsKeywordType(*raw),
            NodeKind::TsThisType(raw) => NodeKind::TsThisType(*raw),
            NodeKind::TsFnOrConstructorType(raw) => NodeKind::TsFnOrConstructorType(*raw),
            NodeKind::TsTypeRef(raw) => NodeKind::TsTypeRef(*raw),
            NodeKind::TsTypeQuery(raw) => NodeKind::TsTypeQuery(*raw),
            NodeKind::TsTypeLit(raw) => NodeKind::TsTypeLit(*raw),
            NodeKind::TsArrayType(raw) => NodeKind::TsArrayType(*raw),
            NodeKind::TsTupleType(raw) => NodeKind::TsTupleType(*raw),
            NodeKind::TsOptionalType(raw) => NodeKind::TsOptionalType(*raw),
            NodeKind::TsRestType(raw) => NodeKind::TsRestType(*raw),
            NodeKind::TsUnionOrIntersectionType(raw) => NodeKind::TsUnionOrIntersectionType(*raw),
            NodeKind::TsConditionalType(raw) => NodeKind::TsConditionalType(*raw),
            NodeKind::TsInferType(raw) => NodeKind::TsInferType(*raw),
            NodeKind::TsParenthesizedType(raw) => NodeKind::TsParenthesizedType(*raw),
            NodeKind::TsTypeOperator(raw) => NodeKind::TsTypeOperator(*raw),
            NodeKind::TsIndexedAccessType(raw) => NodeKind::TsIndexedAccessType(*raw),
            NodeKind::TsMappedType(raw) => NodeKind::TsMappedType(*raw),
            NodeKind::TsLitType(raw) => NodeKind::TsLitType(*raw),
            NodeKind::TsTypePredicate(raw) => NodeKind::TsTypePredicate(*raw),
            NodeKind::TsImportType(raw) => NodeKind::TsImportType(*raw),
            NodeKind::TsType(raw) => NodeKind::TsType(*raw),
            NodeKind::TsTypeAnnotation(raw) => NodeKind::TsTypeAnnotation(*raw),
            NodeKind::ObjectLit(raw) => NodeKind::ObjectLit(*raw),
            NodeKind::BlockStmtOrExpr(raw) => NodeKind::BlockStmtOrExpr(*raw),
            NodeKind::Pat(raw) => NodeKind::Pat(*raw),
            NodeKind::ArrowExpr(raw) => NodeKind::ArrowExpr(*raw),
            NodeKind::ExprOrSpread(raw) => NodeKind::ExprOrSpread(*raw),
            NodeKind::Callee(raw) => NodeKind::Callee(*raw),
            NodeKind::CallExpr(raw) => NodeKind::CallExpr(*raw),
            NodeKind::Ident(raw) => NodeKind::Ident(*raw),
            NodeKind::Expr(raw) => NodeKind::Expr(*raw),
            NodeKind::VarDecl(raw) => NodeKind::VarDecl(*raw),
            NodeKind::NamedExport(raw) => NodeKind::NamedExport(*raw),
            NodeKind::ImportNamedSpecifier(raw) => NodeKind::ImportNamedSpecifier(*raw),
            NodeKind::ClassDecl(raw) => NodeKind::ClassDecl(*raw),
            NodeKind::ClassExpr(raw) => NodeKind::ClassExpr(*raw),
            NodeKind::ExportDecl(raw) => NodeKind::ExportDecl(*raw),
            NodeKind::ExportDefaultDecl(raw) => NodeKind::ExportDefaultDecl(*raw),
            NodeKind::ExportDefaultExpr(raw) => NodeKind::ExportDefaultExpr(*raw),
            NodeKind::ImportDecl(raw) => NodeKind::ImportDecl(*raw),
            NodeKind::ImportDefaultSpecifier(raw) => NodeKind::ImportDefaultSpecifier(*raw),
            NodeKind::Module(raw) => NodeKind::Module(*raw),
            NodeKind::ModuleItem(raw) => NodeKind::ModuleItem(*raw),
            NodeKind::TsEnumDecl(raw) => NodeKind::TsEnumDecl(*raw),
            NodeKind::TsInterfaceDecl(raw) => NodeKind::TsInterfaceDecl(*raw),
            NodeKind::TsTypeAliasDecl(raw) => NodeKind::TsTypeAliasDecl(*raw),
            NodeKind::ImportSpecifier(raw) => NodeKind::ImportSpecifier(*raw),
            NodeKind::FnDecl(raw) => NodeKind::FnDecl(*raw),
            NodeKind::TsModuleDecl(raw) => NodeKind::TsModuleDecl(*raw),
            NodeKind::VarDeclarator(raw) => NodeKind::VarDeclarator(*raw),
            NodeKind::TsTypeParamInstantiation(raw) => NodeKind::TsTypeParamInstantiation(raw),
            NodeKind::Class(raw) => NodeKind::Class(raw),
            NodeKind::ClassMember(raw) => NodeKind::ClassMember(raw),
            NodeKind::ClassProp(raw) => NodeKind::ClassProp(raw),
            NodeKind::TsTypeElement(raw) => NodeKind::TsTypeElement(raw),
            NodeKind::ExportSpecifier(raw) => NodeKind::ExportSpecifier(raw),
            NodeKind::TsInterfaceBody(raw) => NodeKind::TsInterfaceBody(raw),
        }
    }
}
